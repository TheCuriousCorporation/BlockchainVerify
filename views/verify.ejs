<!--
  ____  _            _     ____  _                      ___ ___  
 | __ )| | ___   ___| | __/ ___|| |__   __ _ _ __ ___  |_ _/ _ \ 
 |  _ \| |/ _ \ / __| |/ /\___ \| '_ \ / _` | '__/ _ \  | | | | |
 | |_) | | (_) | (__|   <  ___) | | | | (_| | | |  __/_ | | |_| |
 |____/|_|\___/ \___|_|\_\|____/|_| |_|\__,_|_|  \___(_)___\___/ 

-->
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>BlockShare.IO</title>
		<link rel="shortcut icon" href="/images/Bitcoin.ico" />
		<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
  	    <script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
		<link href="/stylesheets/bootstrap.min.css" rel="stylesheet">
		<style>
			.file-area {
				display: block;
				padding: 10px;
				border: 1px solid #ccc;
			}
			
			#drop_zone {
				border: 2px dashed #bbb;
				-moz-border-radius: 5px;
				-webkit-border-radius: 5px;
				border-radius: 5px;
				padding: 20px;
				text-align: center;
			}
			
			#file {
				display: block;
				width: 0;
				height: 0;
			}
			
			#list {
				overflow: hidden;
				text-overflow: ellipsis;	
			}
			
			.progress-bar {
 				-webkit-transition: width .0s ease;
       			-o-transition: width .0s ease;
          		transition: width .0s ease;
			}
			
			.progress-bar[aria-valuenow="1"], .progress-bar[aria-valuenow="2"], .progress-bar[aria-valuenow="0"] {
  				min-width: 0px;
			}
		</style>
	</head>
	<body>
		<div class="container" id="main-wrapper">
			<div class="row">
				<div class="col-sm-10 col-sm-offset-1" id="header">
					<div class="page-header">
						<center><a href="/" ><img src="/images/Bitcoin.png"></a></center>
						<h1 class="text-center">BlockShare.IO<br><small>Sign and Certify Any Document with Ease</small></h1>
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-sm-8 col-sm-offset-2" id="content">
					<form class="form" id="main-form" for="form" method="post">
						<div class="form-group">
							<br>
							<label for="blockchain"></label>
							<div id="blockchain" value="0x00">
								<!--<option value="0x1E">Dogecoin</option>
								<option value="0x30">Litecoin</option>
								<option value="0x00">Bitcoin</option> -->
							</div>
						</div>
						<div class="form-group">
							<br>
							<div class="file-area">
								<div id="drop_zone">
									<span class="text-muted lead">Drag or Drop Your File Here to Have it Certified</span>
								</div>
								<input type="file" id="file" />
								<center><output id="list"></output></center>
							</div>						
							<br>
							<div class="progress">
								<div class="progress-bar progress-bar-striped active" id="progressbar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div> 
							</div>
						</div>
						
						<div class="form-group should-hide">
							<center><strong>Want this document certified by the Bitcoin Blockchain? We can embed the document's digest in the blockchain for you!</strong></center>
							<br>
							<table class="table table-striped" id="info">
								<tr class="active">
									<td class="text-center"><strong>Document hash</strong></td>
									<td id="documenthash"></td>
								</tr>
								<tr class="active">
									<td class="text-center"><strong>Notary address</strong></td>
									<td>Click Here to Pay and Verify: <a href="bitcoin:?amount=0.005" id="notaryaddress" style="color: #1ABC9C"></a></td>
								</tr>
							</table>
						</div>
						<div class="form-group should-hide text-center">
							<div class="img-thumbnail" id="qrcode">
						</div>
					</form>
				</div>
			</div>
			<div class="row">
				<div class="col-sm-10 col-sm-offset-1" id="footer">
					<br><br><br>
					<p class="text-nowrap text-center"><small>BlockShare.IO</small></p>
				</div>
			</div>
		</div>
		<script type="text/javascript" src="/javascripts/bitcoinjs-min.js"></script>
		<script type="text/javascript" src="/javascripts/qr.js"></script>
		<script type="text/javascript" src="/javascripts/jquery.js"></script>
		<script type="text/javascript" src="/javascripts/bootstrap.min.js"></script>
		<script type="text/javascript" src="/javascripts/coinwidget.js"></script>
		<script>
			var block = parseInt($('#blockchain').val());
			var hasFile = false;
			var fileContent = "";
			var qrcode = new QRCode("qrcode");
			
			
			$('.should-hide').hide();
			$('#blockchain').on('change', function() {
				block = parseInt($('#blockchain').val());
				if ( hasFile ){
					doNotary(block, fileContent);
				}
			});
			$('#drop_zone').on('click', function(evt) {
				$('#file').trigger('click');
			});

			// Check for the various File API support.
			if (window.File && window.FileReader && window.FileList && window.Blob) {
				// Great success! All the File APIs are supported.
    			var reader;
				var progress = document.getElementById('progressbar');

				// Setup the dnd listeners.
				var dropZone = document.getElementById('drop_zone');
				dropZone.addEventListener('dragover', handleDragOver, false);
				dropZone.addEventListener('drop', function(evt) {
					var fileList = evt.dataTransfer.files; // FileList object.
					handleFileSelect(evt, fileList);
				}, false);	

				var fileSelect = document.getElementById('file');
				fileSelect.addEventListener('click', function() {
				    this.value = '';
				});
				fileSelect.addEventListener('change', function(evt) {
					var fileList = evt.target.files; // FileList object.
					handleFileSelect(evt, fileList); 
				}, false);

				function handleDragOver(evt) {
					evt.stopPropagation();
				    evt.preventDefault();
				    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
				}

				function handleFileSelect(evt, fileList) {
					evt.stopPropagation();
					evt.preventDefault();

					$('.should-hide').hide();
					$('#go-btn').attr('disabled', 'disabled');

					var files = fileList; // FileList object.
					var output = [];

					output.push = output.push('<strong>', escape(files[0].name), '</strong> (', files[0].type || 'n/a', ') - ',
			                  					files[0].size, ' bytes, last modified: ', 
			                  					files[0].lastModifiedDate ? files[0].lastModifiedDate.toLocaleDateString() : 'n/a'
				                  			);
				
					// Reset progress indicator on new file selection.
	    			progress.style.width = '0%';
	    			progress.setAttribute('aria-valuenow', 0);
	    			progress.innerText = '0%';
	    			
					reader = new FileReader();
					reader.onerror = errorHandler;
					reader.onprogress = updateProgress;
					//reader.onabort = function(evt)
					//reader.onloadstart = function(evt)
					reader.onload = function(evt) {
						progress.style.width = '100%';
		    			progress.setAttribute('aria-valuenow', 100);
		    			progress.innerText = '100%';
					}
					reader.onloadend = function(evt) {
						hasFile = true;
						fileContent = evt.target.result;
						doNotary(block, fileContent);
					}

					document.getElementById('list').innerHTML = output.join('');
					
					// Read in the file as a binary string.
				    reader.readAsBinaryString(files[0]);
				}
				
				function doNotary(b, c){
					var hash = Bitcoin.Util.sha256ripe160(c);
			      	var addr = new Bitcoin.Address(hash);
					addr.version = parseInt(b);
					$("#notaryaddress").html(addr.toString());
					$("#documenthash").html(Crypto.SHA256(c));
					qrcode.clear();
					qrcode.makeCode(addr.toString());
					setTimeout("$('.should-hide').fadeIn();", 200);					
				}
				
				function errorHandler(evt) {
					hasFile = false;
					switch(evt.target.error.code) {
				    	case evt.target.error.NOT_FOUND_ERR:
				        	console.log('File Not Found!');
				        	break;
				      	case evt.target.error.NOT_READABLE_ERR:
				        	console.log('File is not readable');
				        	break;
				      	case evt.target.error.ABORT_ERR:
				        	break; // noop
				      	default:
				        	console.log('An error occurred reading this file.');
				    };
				}

				function updateProgress(evt) {
					// evt is an ProgressEvent.
				    if (evt.lengthComputable) {
				      	var percentLoaded = Math.round((evt.loaded / evt.total) * 100);
				      	// Increase the progress bar length.
				      	if (percentLoaded < 100) {
				        	progress.style.width = percentLoaded + '%';
				        	progress.setAttribute('aria-valuenow', percentLoaded);
				        	progress.innerText = percentLoaded + '%';
				      	}
				    }
				}
			} else {
			  	console.log('The File APIs are not fully supported in this browser.');
			}
		</script>
	</body>
</html>